name: Build, Push, and Deploy Drupal

on:
  push:
    branches:
      - ssh-coonection-issue  # Trigger the workflow on push to the main branch

env:
  IMAGE_NAME: container-ssh-connection  # Name for the Docker image
  ACR_NAME: pipeline-deployment  # Replace with your ACR name
  ACR_USERNAME: pipelinedeployment  # Replace with your ACR username
  ACR_PASSWORD: sP2RP4CCPUx1gPj511Pi0QxbOrLaNoi1Joeoh0Pvrb+ACRCQYQkL  # Replace with your ACR password
  # AZURE_CREDENTIALS: <your_azure_credentials>  # Replace with your Azure credentials JSON
  # DB_HOST: <your_db_host>  # Replace with your database host
  # DB_USER: <your_db_user>  # Replace with your database user
  # DB_PASSWORD: <your_db_password>  # Replace with your database password
  # DB_NAME: <your_db_name>  # Replace with your database name
  APP_NAME: pipelinedeployment  # Replace with your Azure App Service name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure CLI
      uses: azure/login@v1
      with:
        # creds: ${{ env.AZURE_CREDENTIALS }}
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      uses: docker/login-action@v2
      with:
        registry: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ env.ACR_USERNAME }}
        password: ${{ env.ACR_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} ./Docker
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3

  #   - name: Log in to Azure CLI
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ env.AZURE_CREDENTIALS }}

    # - name: Dump Database
    #   run: |
    #     # Replace with actual database dump command
    #     mysqldump --host=${{ env.DB_HOST }} --user=${{ env.DB_USER }} --password=${{ env.DB_PASSWORD }} ${{ env.DB_NAME }} > dump.sql

    # - name: Import Custom Database to Azure MySQL Flexible Server
    #   run: |
    #     # Use the custom dump file from the repository
    #     mysql --ssl-mode=REQUIRED --host=${{ env.DB_HOST }} --user=${{ env.DB_USER }} --password=${{ env.DB_PASSWORD }} ${{ env.DB_NAME }} < database/mysqlsampledatabase.sql

    # - name: Verify Database Import
    #   run: |
    #     # Run a simple query to verify data import
    #     echo "SHOW TABLES;" | mysql --ssl-mode=REQUIRED --host=${{ env.DB_HOST }} --user=${{ env.DB_USER }} --password=${{ env.DB_PASSWORD }} ${{ env.DB_NAME }}
      
    # - name: Log in to Azure
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ env.AZURE_CREDENTIALS }}

    # - name: Deploy to Azure App Service
    #   uses: azure/webapps-deploy@v3
    #   with:
    #     app-name: ${{ env.APP_NAME }}
    #     # slot-name: production
    #     images: |
    #       ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
