name: Build, Push, and Deploy Drupal

on:
  push:
    branches:
      - ssh-coonection-issue  # Trigger the workflow on push to the main branch

env:
  IMAGE_NAME: uat1-tag-1.4.0  # Name for the Docker image
  ACR_NAME: uat1americorpsacr  # Replace with your ACR name
  ACR_USERNAME: uat1americorpsacr  # Replace with your ACR username
  ACR_PASSWORD: mJ6Wv8aaH97GNl0OxeJhZjh+Cvn9beXOm0pIYbMgNI+ACRDIdNFo  # Replace with your ACR password
  # AZURE_CREDENTIALS: <your_azure_credentials>  # Replace with your Azure credentials JSON
  # DB_HOST: <your_db_host>  # Replace with your database host
  # DB_USER: <your_db_user>  # Replace with your database user
  # DB_PASSWORD: <your_db_password>  # Replace with your database password
  # DB_NAME: <your_db_name>  # Replace with your database name
  APP_NAME: uat1AmericorpsWebApp  # Replace with your Azure App Service name
  # RESOURCE_GROUP_NAME : pipeline-deployment
  # SMTP_USERNAME : noumanshafiq84@gmail.com
  # SMTP_PASSWORD : NOuman@1236
  # SENDER_EMAIL : noumanshafiq84@gmail.com
  # RECIEVER_EMAIL : noumanshafiq84@gmail.com

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure CLI
      uses: azure/login@v1
      with:
        # creds: ${{ env.AZURE_CREDENTIALS }}
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      uses: docker/login-action@v2
      with:
        registry: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ env.ACR_USERNAME }}
        password: ${{ env.ACR_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} ./Docker
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
    
    # - name: Deploy to Azure App Service
    #   run: |
    #     az webapp config container set \
    #       --name ${{ env.APP_SERVICE_NAME }} \
    #       --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
    #       --container-image-name ${{ secrets.ACR_LOGIN_SERVER }}/drupal-10-11-${{ github.run_id }}:latest

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.APP_NAME }}
        # slot-name: production
        images: |
          ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

    # - name: Fetch App Service logs
    #   run: |
    #     az webapp log tail --name ${{ env.APP_NAME }} \
    #     --resource-group ${{ env.RESOURCE_GROUP_NAME }} > app_service_logs.txt

    # Send email with logs using Gmail SMTP
    # - name: Send email to developer with logs
    #   uses: dawidd6/action-send-mail@v3
    #   with:
    #     server_address: smtp.gmail.com
    #     server_port: 587
    #     username: ${{ env.SMTP_USERNAME }}
    #     password: ${{ env.SMTP_PASSWORD }}
    #     subject: "Azure App Service Deployment Logs"
    #     to: ${{ env.SENDER_EMAIL }}
    #     from: ${{ env.RECIEVER_EMAIL }}  # Your Gmail address
    #     content_type: text/plain
    #     body: |
    #       Hello,

    #       The app has been successfully deployed to Azure App Services. Please find the deployment logs attached.

    #       Regards,
    #       DevOps Team
        # attachments: app_service_logs.txt
  
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3

    # - name: Log in to Azure CLI
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ env.AZURE_CREDENTIALS }}

    # - name: Dump Database
    #   run: |
    #     # Replace with actual database dump command
    #     mysqldump --host=${{ env.DB_HOST }} --user=${{ env.DB_USER }} --password=${{ env.DB_PASSWORD }} ${{ env.DB_NAME }} > dump.sql

    # - name: Import Custom Database to Azure MySQL Flexible Server
    #   run: |
    #     # Use the custom dump file from the repository
    #     mysql --ssl-mode=REQUIRED --host=${{ env.DB_HOST }} --user=${{ env.DB_USER }} --password=${{ env.DB_PASSWORD }} ${{ env.DB_NAME }} < database/mysqlsampledatabase.sql

    # - name: Verify Database Import
    #   run: |
    #     # Run a simple query to verify data import
    #     echo "SHOW TABLES;" | mysql --ssl-mode=REQUIRED --host=${{ env.DB_HOST }} --user=${{ env.DB_USER }} --password=${{ env.DB_PASSWORD }} ${{ env.DB_NAME }}
      
    # - name: Log in to Azure
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ env.AZURE_CREDENTIALS }}

    # - name: Deploy to Azure App Service
    #   uses: azure/webapps-deploy@v3
    #   with:
    #     app-name: ${{ env.APP_NAME }}
    #     # slot-name: production
    #     images: |
    #       ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

    # - name: Fetch App Service logs
    #   run: |
    #     az webapp log tail --name ${{ env.APP_SERVICE_NAME }} \
    #     --resource-group ${{ env.RESOURCE_GROUP_NAME }} > app_service_logs.txt

    # # Send email with logs using Gmail SMTP
    # - name: Send email to developer with logs
    #   uses: dawidd6/action-send-mail@v3
    #   with:
    #     server_address: smtp.gmail.com
    #     server_port: 587
    #     username: ${{ secrets.SMTP_USERNAME }}
    #     password: ${{ secrets.SMTP_PASSWORD }}
    #     subject: "Azure App Service Deployment Logs"
    #     to: developer@example.com
    #     from: your-email@gmail.com  # Your Gmail address
    #     content_type: text/plain
    #     body: |
    #       Hello,

    #       The app has been successfully deployed to Azure App Services. Please find the deployment logs attached.

    #       Regards,
    #       DevOps Team
    #     attachments: app_service_logs.txt